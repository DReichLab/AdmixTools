#!/usr/bin/perl  -w 

## mkpretty infile outfile 

($infile, $outfile) = @ARGV ;
$T1 = "/tmp/t1.$$" ;
$T2 = "/tmp/t2.$$" ;

if (defined $infile) {
die "Usage: mkpretty < infile > outfile OR mkpretty infile outfile\n" unless (defined $outfile) ;
system "cp $infile $T1" ;
}
else {
system "cat - > $T1" ;
}
open (F1, $T1) || die "badly\n" ;
for (;;) {
 last if (eof(F1)) ;
 $line = <F1> ;
 chomp $line ;
 (@Z) = split " ", $line ;
 next unless (defined $Z[0]) ;
 next if  ($Z[0] =~ /\#/) ;
 $n = @Z ;
 foreach $x (0..$n-1) { 
  $W[$x] = 0 unless (defined ($W[$x])) ;
  $w = length($Z[$x]) ;
  $W[$x] = $w if ($w > $W[$x]) ;
 }
}
## @W is maximum width
close F1 ; 
$nw = @W ; 
foreach $x (0..$nw-1) { 
 $w = $W[$x] ;
 $fmt = "%" . $w . "s" ; 
 $F[$x] = $fmt ;
}

open (F1, $T1) || die "badly\n" ;
open (YY, ">$T2") || die "very badly\n" ;
for (;;) {
 last if (eof(F1)) ;
 $line = <F1> ;
 chomp $line ;
 (@Z) = split " ", $line ;
 next unless (defined $Z[0]) ;
 if  ($Z[0] =~ /\#/) {  
  print YY "$line\n";
  next ;
 }
 $n = @Z ;
 foreach $x (0..$n-1) { 
  printf YY "$F[$x]", $Z[$x] ;
  print  YY "  ", if ($x != ($n-1)) ;
 }
 print YY "\n" ;
}
if (defined $outfile) { 
 system "cp $T2 $outfile" ;
} 
else { 
 system "cat $T2" ;
}
unlink ($T1, $T2) ;

